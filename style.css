/* style.css */
:root {
    --primary-color: #007bff;
    --primary-hover-color: #0056b3;
    --secondary-color: #6c757d;
    --success-color: #28a745;
    --danger-color: #dc3545;
    --light-bg-color: #f8f9fa;
    --dark-text-color: #212529;
    --medium-text-color: #495057;
    --light-text-color: #6c757d;
    --border-color: #dee2e6;
    --card-bg-color: #ffffff;
    --card-shadow: 0 4px 12px rgba(0,0,0,0.08);
    --border-radius: 6px;
    --font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
}

body {
    font-family: var(--font-family);
    line-height: 1.6;
    margin: 0;
    padding: 0; /* Body padding removed, managed by containers */
    background-color: #eef2f5;
    color: var(--dark-text-color);
    font-size: 14px;
    -webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

.global-settings-bar {
    background-color: var(--card-bg-color);
    padding: 10px 0;
    box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    margin-bottom: 15px;
    position: sticky; /* Make settings bar sticky */
    top: 0;
    z-index: 1001; /* Higher than character panel header */
}
.settings-bar-content {
    max-width: 1100px;
    margin: 0 auto;
    padding: 0 15px;
    text-align: right;
}

.global-container {
    max-width: 1100px;
    margin: 0 auto 20px auto; /* Added bottom margin */
    padding: 0 15px; /* Padding for content within container */
    display: flex;
    flex-direction: column;
    gap: 20px;
}

h2, h3, h4, h5 {
    color: var(--dark-text-color);
    margin-top: 0;
    font-weight: 600;
    word-break: break-word; /* Ensure headers wrap */
}
h2 { text-align: center; margin-bottom: 25px; font-size: 2em; }
h3 { margin-bottom: 15px; border-bottom: 1px solid var(--border-color); padding-bottom: 10px; font-size: 1.5em;}
h4 { margin-bottom: 12px; font-size: 1.2em; color: #34495e; display: flex; align-items: center; flex-wrap: wrap; gap: 5px;} /* Allow h4 to wrap */
h5 { font-size: 1.1em; color: var(--primary-color); margin-bottom: 10px; display: flex; align-items: center; font-weight: 500; flex-wrap: wrap; gap: 5px;}


/* Card Base Style */
.card {
    background: var(--card-bg-color);
    padding: 20px 25px;
    border-radius: var(--border-radius);
    box-shadow: var(--card-shadow);
    border: 1px solid var(--border-color);
}

/* Enemy Card */
.enemy-input-group { display: flex; align-items: center; margin-bottom: 15px; gap: 10px; flex-wrap: wrap; }
.enemy-input-group label:not(.checkbox-label) { font-weight: 500; min-width: 90px; flex-shrink: 0; }
.enemy-input-group input[type="number"] {
    padding: 9px 12px;
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    box-sizing: border-box;
    width: 150px;
    transition: border-color 0.2s ease, box-shadow 0.2s ease;
}
.enemy-input-group input[type="number"]:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);
}
.checkbox-label { display: flex; align-items: center; cursor: pointer; font-weight: normal;}
.checkbox-label input[type="checkbox"] { margin-right: 8px; width: auto; height: auto; accent-color: var(--primary-color); }


/* Character Tabs */
.character-tabs {
    display: flex;
    flex-wrap: wrap;
    border-bottom: 2px solid var(--primary-color);
    margin-bottom: -2px;
    position: sticky;
    top: 47px; /* Height of global-settings-bar + its margin, adjust if necessary */
    background-color: #eef2f5; /* Match body bg to avoid content showing through during scroll */
    z-index: 1000; /* Below settings bar, above panel header */
    padding-top: 5px; /* Small padding to lift tabs a bit */
}
.tab-button {
    padding: 12px 20px;
    border: 1px solid var(--border-color);
    border-bottom: none;
    border-radius: var(--border-radius) var(--border-radius) 0 0;
    cursor: pointer;
    background-color: var(--light-bg-color);
    margin-right: 5px;
    margin-bottom: -2px;
    font-weight: 500;
    color: var(--medium-text-color);
    transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease;
    position: relative;
    white-space: nowrap; /* Prevent tab text from wrapping */
    overflow: hidden;
    text-overflow: ellipsis; /* Add ellipsis if tab text is too long */
    max-width: 180px; /* Limit tab width */
}
.tab-button:hover { background-color: #e2e6ea; }
.tab-button.active {
    background-color: var(--card-bg-color);
    border-color: var(--primary-color) var(--primary-color) var(--card-bg-color) var(--primary-color);
    border-width: 2px 1px 2px 1px;
    border-style: solid;
    font-weight: 600;
    color: var(--primary-color);
    z-index: 2;
}

/* Character Panel */
.character-panel {
    display: none;
    border: 1px solid var(--primary-color);
    border-top: none;
    background: var(--card-bg-color);
    border-radius: 0 0 var(--border-radius) var(--border-radius);
    box-shadow: var(--card-shadow);
    position: relative;
    /* overflow: hidden; /* Let panel content scroll */
}
.character-panel.active { display: block; }

.character-header {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
    padding: 15px 25px;
    border-bottom: 1px solid var(--border-color);
    background-color: var(--card-bg-color);
    position: sticky;
    top: calc(47px + 46px); /* Height of global-settings-bar + character-tabs, adjust based on actual heights */
    z-index: 999; /* Below tabs */
    box-shadow: 0 2px 5px rgba(0,0,0,0.05);
    gap: 15px;
}
.character-panel-content {
    padding: 25px;
    /* max-height calculation needs to be dynamic or very generous if headers are sticky.
       Let's remove max-height for now and rely on page scroll.
       If you want internal panel scroll, this needs careful calculation. */
    /* max-height: calc(100vh - 250px); /* Example: Adjust based on total sticky header heights */
    /* overflow-y: auto; */
}

.character-name-input {
    font-size: 1.4em;
    font-weight: 600;
    border: 1px solid var(--border-color);
    padding: 10px 15px;
    border-radius: var(--border-radius);
    color: var(--dark-text-color);
    flex-grow: 1;
    min-width: 200px;
}
.character-name-input:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 0.2rem rgba(0,123,255,0.25);
}

.header-right-content {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    gap: 10px;
    min-width: 280px;
    flex-shrink: 0;
}
.damage-and-conditional-bonuses {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    width: 100%;
}
.final-damage-output-display {
    font-size: 1.4em;
    font-weight: 700;
    color: var(--danger-color);
    padding: 8px 15px;
    background-color: var(--light-bg-color);
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    text-align: right;
    margin-bottom: 10px;
    min-width: 150px;
}
.conditional-triggers {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    font-size: 0.95em;
    gap: 5px;
}
.conditional-triggers label { font-weight: normal; cursor: pointer; display: flex; align-items: center; }
.conditional-triggers input[type="checkbox"] { margin-right: 8px; }

/* Formula Trace Area Toggle & Styling */
#showFormulaTraceGlobal:not(:checked) ~ .global-container .formula-trace-area { /* Target trace area inside global-container */
    display: none;
}
.formula-trace-area {
    font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;
    font-size: 0.9em;
    color: var(--dark-text-color);
    background-color: #fdfdfd;
    border: 1px solid var(--border-color);
    padding: 12px 15px;
    border-radius: var(--border-radius);
    max-height: 200px; /* Increased max height */
    overflow-y: auto;
    width: 100%;
    white-space: pre-wrap;
    word-break: break-all;
    line-height: 1.5;
    box-sizing: border-box;
    transition: opacity 0.3s ease, max-height 0.3s ease;
    margin-top: 10px; /* Space from elements above */
}
.formula-trace-area .trace-step {
    margin-bottom: 4px;
    padding-bottom: 4px;
    border-bottom: 1px dotted #ccc;
    word-break: break-word;
}
.formula-trace-area .trace-step:last-child { border-bottom: none; margin-bottom: 0;}
.formula-trace-area .trace-value { font-weight: bold; color: var(--primary-color);}
.formula-trace-area .trace-operator { color: #e83e8c; margin: 0 0.2em;}
.formula-trace-area .trace-comment { color: var(--light-text-color); font-style: italic; margin-left: 10px;}


/* Input Sections and General Inputs */
.input-section { margin-bottom: 25px; }
.input-section > label:not(.trigger-label):not(.bonus-label):not(.checkbox-label):not(.special-base-buff-label):not(.caster-final-label) {
    display: block; margin-bottom: 8px; font-weight: 500;
}
.input-section .input-with-suffix input[type="number"], /* Target input inside .input-with-suffix */
.input-section > input[type="number"]:not(.bonus-value-input), /* Direct child number inputs not part of bonus items */
.input-section select {
    width: 100%;
    padding: 10px 12px;
    margin-bottom: 10px;
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    box-sizing: border-box;
    background-color: var(--card-bg-color);
    transition: border-color 0.2s ease, box-shadow 0.2s ease;
}
.input-section .input-with-suffix input[type="number"]:focus,
.input-section > input[type="number"]:not(.bonus-value-input):focus,
.input-section select:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);
}

.input-with-suffix {
    display: flex;
    align-items: center;
    gap: 8px; /* Gap between input and suffix */
    /* margin-bottom: 10px; /* If this container replaces direct input margin */
}
.input-with-suffix input[type="number"] {
    flex-grow: 1;
    margin-bottom: 0;
    width: auto; /* Allow flex to control width */
}
.input-suffix {
    font-weight: 500;
    color: var(--medium-text-color);
    white-space: nowrap;
}


/* Intermediate Result Display */
.intermediate-result-display {
    font-size: 0.95em;
    color: var(--primary-color);
    margin-right: 10px;
    font-weight: bold;
    min-width: 60px; /* Reduced min-width as it's a prefix now */
    text-align: left; /* Align to left for prefix style */
    order: 0; /* Default order */
    line-height: 1.2;
    white-space: nowrap;
}
.input-section > h4 .intermediate-result-display,
.input-section > h5 .intermediate-result-display {
    font-size: 1em;
}
/* Ensure h4/h5 text also wraps */
.input-section > h4 span:not(.intermediate-result-display),
.input-section > h5 span:not(.intermediate-result-display) {
    word-break: break-word;
}


/* Bonus Item Styling (Grid based) */
.bonus-item {
    display: grid;
    /* Columns: IR, Label, Value, Suffix, AppliesTo, Remove, Trigger */
    grid-template-columns: auto minmax(120px, 1.5fr) 1fr auto minmax(180px, 1.5fr) auto auto;
    gap: 8px 10px;
    align-items: center;
    margin-bottom: 12px;
    padding: 12px 15px;
    border: 1px solid #e9ecef;
    border-radius: var(--border-radius);
    background-color: var(--light-bg-color);
    transition: box-shadow 0.2s ease, background-color 0.2s ease;
}
.bonus-item:hover {
    box-shadow: 0 2px 8px rgba(0,0,0,0.07);
    background-color: #fdfdfd;
}

.bonus-item .intermediate-result-display { grid-column: 1 / 2; justify-self: flex-start; padding-right: 5px; color: var(--medium-text-color); font-weight: normal;}
.bonus-item .bonus-label.with-intermediate { grid-column: 2 / 3; font-weight: 500; white-space: normal; word-break: break-word; }
.bonus-item .bonus-value-input,
.bonus-item select:not(.caster-ref-select) {
    grid-column: 3 / 4; width: 100%; padding: 9px 10px;
    border: 1px solid var(--border-color); border-radius: var(--border-radius); margin-bottom: 0;
    min-width: 80px; /* Ensure input is not too small */
}
.bonus-item .input-suffix {
    grid-column: 4 / 5;
    padding-left: 0px; /* No extra padding if grid handles gap */
    font-weight: 500;
    color: var(--medium-text-color);
    white-space: nowrap;
}
.bonus-item .applies-to-group {
    grid-column: 5 / 6; display: flex; flex-wrap: wrap; gap: 8px;
    white-space: normal; justify-self: center; font-size: 0.9em;
}
.bonus-item .remove-bonus { grid-column: 6 / 7; }
.bonus-item .trigger-label { grid-column: 7 / 8; }


/* Charge Up Bonus Item */
.charge-up-bonus-item {
    /* IR, Label, Value, Suffix, SpecialCheckbox, AppliesTo, Remove, Trigger */
    grid-template-columns: auto minmax(120px, 1.5fr) 1fr auto auto minmax(180px, 1.5fr) auto auto;
}
.charge-up-bonus-item .intermediate-result-display {grid-column: 1/2;}
.charge-up-bonus-item .bonus-label.with-intermediate { grid-column: 2/3; }
.charge-up-bonus-item .bonus-value-input { grid-column: 3/4; }
.charge-up-bonus-item .input-suffix { grid-column: 4 / 5; }
.charge-up-bonus-item .special-base-buff-label {
    grid-column: 5 / 6;
    display: flex; align-items: center; gap: 4px; font-size: 0.9em;
    white-space: normal; word-break: break-word; justify-self: center; cursor: pointer;
}
.charge-up-bonus-item .applies-to-group { grid-column: 6 / 7; }
.charge-up-bonus-item .remove-bonus { grid-column: 7 / 8; }
.charge-up-bonus-item .trigger-label { grid-column: 8 / 9; }

.bonus-item .remove-bonus {
    justify-self: center; padding: 7px 12px; font-size: 0.9em;
    background-color: var(--danger-color); color: white; border: none;
    border-radius: var(--border-radius); cursor: pointer; transition: background-color 0.2s ease;
}
.bonus-item .remove-bonus:hover { background-color: #c82333; }

.bonus-item .trigger-label,
.bonus-item .applies-to-group label,
.special-base-buff-label {
    font-weight: normal; margin:0; cursor: pointer; display: flex; align-items: center;
    gap: 4px;
    white-space: nowrap;
}
.bonus-item .trigger-label { justify-self: flex-end; font-size: 0.95em; }

.bonus-item input[type="checkbox"], .bonus-item input[type="radio"] {
    margin: 0; vertical-align: middle; cursor: pointer; width: auto; height: auto;
    accent-color: var(--primary-color);
}

/* Caster Effect Item Layout */
.caster-effect-item {
    /* IR, Label, RefStat, Multiplier, Suffix, IsFinal, AppliesTo, Remove, Trigger */
    grid-template-columns: auto minmax(100px, 1fr) auto 0.8fr auto auto minmax(180px, 1.5fr) auto auto;
}
.caster-effect-item .intermediate-result-display {grid-column: 1/2;}
.caster-effect-item .bonus-label.with-intermediate { grid-column: 2 / 3; }
.caster-effect-item .caster-ref-select { grid-column: 3 / 4; width: 100%; padding: 9px 10px; border:1px solid var(--border-color); border-radius:var(--border-radius)}
.caster-effect-item .bonus-value-input { grid-column: 4 / 5; }
.caster-effect-item .input-suffix { grid-column: 5 / 6; }
.caster-effect-item .caster-final-label { grid-column: 6 / 7; display: flex; align-items: center; gap:4px; white-space:nowrap; justify-self:center; font-size:0.9em;}
.caster-effect-item .applies-to-group { grid-column: 7 / 8; }
.caster-effect-item .remove-bonus { grid-column: 8 / 9; }
.caster-effect-item .trigger-label { grid-column: 9 / 10; }

/* Skill Multiplier Item Layout */
.skill-multiplier-item {
    /* IR, RadioSelect, Value, Suffix, (Hidden Col), Remove, Trigger */
    grid-template-columns: auto auto 1fr auto 1px auto auto !important;
}
.skill-multiplier-item .intermediate-result-display { grid-column: 1/2; }
.skill-multiplier-item input[type="radio"] { grid-column: 2 / 3; justify-self: center;}
.skill-multiplier-item .bonus-value-input { grid-column: 3 / 4; }
.skill-multiplier-item .input-suffix { grid-column: 4/5; }
.skill-multiplier-item .applies-to-group { visibility: hidden; grid-column: 5 / 6; width:1px; overflow:hidden;}
.skill-multiplier-item .remove-bonus { grid-column: 6 / 7; }
.skill-multiplier-item .trigger-label { grid-column: 7 / 8; }


/* Add Buttons */
.input-section > button[type="button"] {
    padding: 10px 18px; font-size: 1em;
    background-color: var(--success-color); color: white; border: none;
    border-radius: var(--border-radius); cursor: pointer; margin-top: 10px;
    transition: background-color 0.2s ease;
}
.input-section > button[type="button"]:hover { background-color: #1e7e34; }

/* Simplified Import/Export Footer */
.io-section-footer {
    margin-top: 30px; padding: 25px;
    border-top: 1px solid var(--border-color); display: flex;
    flex-wrap: wrap;
    justify-content: center; align-items: center; gap: 20px;
}
.io-section-footer button[type="button"],
.io-section-footer .file-import-label {
    padding: 10px 18px; font-size: 1em; border-radius: var(--border-radius); cursor: pointer;
}
.io-section-footer button[type="button"] {
    background-color: var(--primary-color); color: white; border: 1px solid var(--primary-color);
}
.io-section-footer button[type="button"]:hover { background-color: var(--primary-hover-color); }
.file-import-label { font-weight: 500; display: flex; align-items: center; gap: 10px; }
.io-section-footer input[type="file"] { max-width: 280px; }

.io-section-footer input[type="file"]::file-selector-button {
    margin-right: 12px; border: 1px solid var(--secondary-color); padding: .4em .8em;
    border-radius: .25rem; background-color: var(--secondary-color); color: white;
    cursor: pointer; transition: background-color .15s ease-in-out,border-color .15s ease-in-out;
}
.io-section-footer input[type="file"]::file-selector-button:hover {
    background-color: #545b62; border-color: #4e555b;
}

/* Responsive adjustments */
@media (max-width: 992px) { /* More granular breakpoints */
    .bonus-item, .charge-up-bonus-item, .caster-effect-item, .skill-multiplier-item {
        /* Adjust columns for medium screens - e.g. 2 main content columns then stack controls */
        grid-template-columns: auto minmax(100px, 1fr) 1fr auto; /* IR, Label, Value+Suffix, Controls stacked */
    }
    .bonus-item .input-suffix { grid-column: span 1; /* Part of value cell */ }
    .bonus-item .applies-to-group,
    .bonus-item .remove-bonus,
    .bonus-item .trigger-label,
    .charge-up-bonus-item .special-base-buff-label,
    .caster-effect-item .caster-final-label {
        grid-column: 1 / -1; /* Stack these below */
        justify-self: flex-start;
        margin-top: 8px;
    }
    .bonus-item .applies-to-group { flex-direction: row; } /* Keep appliesTo horizontal if space */
     .caster-effect-item {
        grid-template-columns: auto minmax(100px, 1fr) auto 1fr; /* IR, Label, RefStat, Multiplier+Suffix */
    }
}


@media (max-width: 768px) {
    body { padding: 0; font-size: 13px; } /* Remove body padding, global-container manages it */
    .global-container { gap: 15px; padding: 0 10px 15px 10px; /* Padding for content */ }
    .global-settings-bar .settings-bar-content { padding: 0 10px; }

    h2 { font-size: 1.6em; margin-bottom: 15px; }
    h3 { font-size: 1.3em; }
    h4 { font-size: 1.1em; }
    h5 { font-size: 1em; }

    .card, .character-panel-content { padding: 15px; }
    .character-header {
        padding: 12px 15px;
        flex-direction: column;
        align-items: stretch;
        top: calc(47px + 40px); /* Adjust sticky top for smaller tab height */
    }
    .character-name-input { font-size: 1.2em; width: 100%; margin-bottom: 10px;}
    .header-right-content { min-width: unset; width: 100%; align-items: stretch; }
    .final-damage-output-display { font-size: 1.2em; text-align: center; }

    .tab-button { padding: 10px 12px; font-size: 0.9em; max-width: 120px; }
    .character-tabs { top: 47px; /* Height of global-settings-bar */ }


    .bonus-item, .charge-up-bonus-item, .caster-effect-item, .skill-multiplier-item {
        grid-template-columns: 1fr; /* Stack all items vertically */
        gap: 10px;
    }
    .bonus-item > *, .charge-up-bonus-item > *, .caster-effect-item > *, .skill-multiplier-item > * {
        grid-column: 1 / -1 !important;
        justify-self: stretch !important;
        text-align: left !important;
    }
    .bonus-item .bonus-value-input { width: calc(100% - 30px); /* Adjust if suffix is present */ }
    .bonus-item .applies-to-group { flex-direction: column; align-items: flex-start; gap: 5px; }
    .bonus-item .remove-bonus { width: auto; justify-self: flex-start !important; margin-top: 5px; }
    .bonus-item .trigger-label { justify-self: flex-start !important; margin-top: 5px; }
    .bonus-item .input-suffix { justify-self: flex-start; padding-left: 0; margin-top: 0; margin-left: 5px; display: inline; }


    .io-section-footer { flex-direction: column; gap: 15px; }
    .io-section-footer button[type="button"], .io-section-footer .file-import-label { width: 100%; text-align: center; }
    .io-section-footer input[type="file"] { width: 100%; max-width: none; }
}

@media (max-width: 480px) {
    .global-container { padding: 0 5px 10px 5px; }
    .global-settings-bar .settings-bar-content { padding: 0 5px; }
    .card, .character-panel-content { padding: 10px; }
    .character-header { padding: 10px; top: calc(47px + 36px); }

    body { font-size: 12px; }
    .tab-button { padding: 8px 10px; font-size: 0.85em; margin-right: 3px; max-width: 100px;}
    .character-name-input { font-size: 1.1em; }
    .final-damage-output-display { font-size: 1.1em; }
    .input-section input[type="number"], .input-section select { padding: 8px 10px; }
    .bonus-item { padding: 10px; }
}
